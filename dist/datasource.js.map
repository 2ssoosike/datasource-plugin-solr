{"version":3,"sources":["../src/datasource.js"],"names":["_","$","moment","dateMath","SolrDatasource","instanceSettings","$q","backendSrv","templateSrv","url","endsWith","substr","length","basicAuth","withCredentials","name","solrCollection","jsonData","_request","options","method","inspect","headers","datasourceRequest","doRequest","then","response","status","message","title","queryOptions","self","targetPromises","targets","filter","target","hide","map","collection","time","groupEnabled","groupByField","rows","maxDataPoints","q","replace","scopedVars","groupParams","queryBuilder","query","fq","range","from","toJSON","to","fl","fields","sort","group","groupLimit","requestOptions","params","bind","convertResponse","value","all","convertedResponses","result","data","convertedResponse","flatten","mapToTextValue","facetFields","collections","text","facet_counts","ar","key","facet_fields","hasOwnProperty","array","i","push","expandable","split","field","seriesList","series","docs","forEach","item","property","ts","utc","unix","datapoints","groupBy","responseHeader","grouped","groups","groupValue","doclist","t","convertResponseUngrouped","convertResponseGrouped","annotation","baseQuery","timeField","tagsField","titleField","textField","start","toISOString","end","limit","doc","valueOf","tags"],"mappings":"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","file":"datasource.js","sourcesContent":["// Copyright 2018 PUE.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport _ from 'lodash';\nimport * as $ from 'jquery';\nimport moment from 'moment';\nimport * as dateMath from 'app/core/utils/datemath';\n\n/** @ngInject */\nexport class SolrDatasource {\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.url = instanceSettings.url;\n    if (this.url.endsWith('/')) {\n      this.url = this.url.substr(0, this.url.length - 1);\n    }\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.name = instanceSettings.name;\n    //this.collection = instanceSettings.jsonData.collection;\n    this.$q = $q;\n    this.templateSrv = templateSrv;\n    this.backendSrv = backendSrv;\n    this.solrCollection = instanceSettings.jsonData.solrCollection;\n\n    // Helper to make API requests to Solr. To avoid CORS issues, the requests may be proxied\n    // through Grafana's backend via `backendSrv.datasourceRequest`.\n    this._request = function (options) {\n      options.url = this.url + options.url;\n      options.method = options.method || 'GET';\n      options.inspect = {\n        'type': 'solr'\n      };\n\n      if (this.basicAuth) {\n        options.withCredentials = true;\n        options.headers = {\n          \"Authorization\": this.basicAuth\n        };\n      }\n\n      return backendSrv.datasourceRequest(options);\n    };\n  }\n\n  // Test the connection to Solr by querying collection response.\n  testDatasource() {\n    return this.doRequest({\n      url: this.url + '/',\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return {\n          status: \"success\",\n          message: \"Data source is working\",\n          title: \"Success\"\n        };\n      }\n    });\n  }\n\n  // Query for metric targets within the specified time range.\n  // Returns the promise of a result dictionary.\n  query(queryOptions) {\n    var self = this;\n\n    var targetPromises = _(queryOptions.targets)\n      .filter(function (target) {\n        return target.target && !target.hide;\n      })\n      .map(function (target) {\n        if (!target.collection || !target.time) {\n          return [];\n        }\n        if (target.groupEnabled === 'group' && !target.groupByField) {\n          return [];\n        }\n        //var url = '/api/v' + self.apiVersion + '/timeseries';\n        //fq=time:[2018-01-24T02:59:10.000Z TO 2018-01-24T14:59:10.000Z]\n        var url = '/solr/' + target.collection + '/select?wt=json';\n        var rows = target.maxDataPoints || '200000';\n        var q = self.templateSrv.replace(target.target, queryOptions.scopedVars);\n        var groupParams = 'group=false';\n        q = self.queryBuilder(q);\n        var query = {\n          //query: templateSrv.replace(target.target, queryOptions.scopedVars),\n          fq: target.time + ':[' + queryOptions.range.from.toJSON() + ' ' + queryOptions.range.to.toJSON() + ']',\n          q: q,\n          fl: target.time + ',' + target.fields,\n          rows: rows,\n          sort: target.time + ' desc'\n          //from: queryOptions.range.from.toJSON(),\n          //to: queryOptions.range.to.toJSON(),\n        };\n        if (target.groupEnabled === 'group') {\n          query.group = true;\n          query['group.field'] = target.groupByField;\n          self.groupByField = target.groupByField;\n          query['group.limit'] = target.groupLimit;\n        }\n\n        self.time = target.time;\n\n        var requestOptions;\n\n        requestOptions = {\n          method: 'GET',\n          url: url,\n          params: query\n        };\n\n        return self._request(requestOptions).then(_.bind(self.convertResponse, self));\n      })\n      .value();\n\n    return this.$q.all(targetPromises).then(function (convertedResponses) {\n      var result = {\n        data: _.map(convertedResponses, function (convertedResponse) {\n          return convertedResponse.data;\n        })\n      };\n      result.data = _.flatten(result.data);\n      return result;\n    });\n  }\n\n  queryBuilder(query) {\n    return query.replace('{', '(').replace('}', ')').replace(',', ' OR ');\n  }\n\n  getOptions(query) {\n    return [];\n  }\n\n  listCollections(query) {\n    // solr/admin/collections?action=LIST&wt=json\n    var url = this.url + '/solr/admin/collections?action=LIST&wt=json';\n    var requestOptions;\n\n    requestOptions = {\n      method: 'GET',\n      url: url\n    };\n\n    return this.doRequest({\n      url: url,\n      method: 'GET',\n    }).then(this.mapToTextValue);\n  }\n\n  listFields(query, collection) {\n    // solr/admin/collections?action=LIST&wt=json\n    if (!collection) {\n      return [];\n    }\n    var url = this.url + '/solr/' + collection + '/select?q=*:*&wt=csv&rows=0';\n    var requestOptions;\n\n    requestOptions = {\n      method: 'GET',\n      url: url\n    };\n\n    return this.doRequest({\n      url: url,\n      method: 'GET',\n    }).then(this.mapToTextValue);\n  }\n\n  metricFindQuery(query) {\n    //q=*:*&facet=true&facet.field=CR&facet.field=product_type&facet.field=provincia&wt=json&rows=0\n    if (!this.solrCollection) {\n      return [];\n    }\n    var facetFields = query;\n    var url = this.url + '/solr/' + this.solrCollection + '/select?q=*:*&facet=true&facet.field=' + facetFields + '&wt=json&rows=0';\n\n    return this.doRequest({\n      url: url,\n      method: 'GET',\n    }).then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n    if (result.data.collections) {\n      return result.data.collections.map(function (collection) {\n        return {\n          text: collection,\n          value: collection\n        };\n      });\n    }\n    if (result.data.facet_counts) {\n      var ar = [];\n      for (var key in result.data.facet_counts.facet_fields) {\n        if (result.data.facet_counts.facet_fields.hasOwnProperty(key)) {\n          var array = result.data.facet_counts.facet_fields[key];\n          for (var i = 0; i < array.length; i += 2) { // take every second element\n            ar.push({\n              text: array[i],\n              expandable: false\n            });\n          }\n        }\n      }\n      return ar;\n    }\n    if (result.data) {\n      return result.data.split(',').map(function (field) {\n        return {\n          text: field,\n          value: field\n        };\n      });\n    }\n  }\n\n  convertResponseUngrouped(response) {\n    var data = response.data;\n    var seriesList = [];\n    var series = {};\n    var self = this;\n    _(data.response.docs).forEach(function (item) {\n      for (var property in item) {\n        if (item.hasOwnProperty(property) && property != self.time) {\n          // do stuff\n          if (typeof (series[property]) === 'undefined') {\n            series[property] = [];\n          }\n          var ts = moment.utc(item[self.time]).unix() * 1000;\n          series[property].push([item[property] || 0, ts]);\n        }\n      }\n    });\n    for (var property in series) {\n      seriesList.push({\n        target: property,\n        datapoints: series[property]\n      });\n    }\n    return {\n      data: seriesList\n    };\n  }\n\n  convertResponseGrouped(response) {\n    var self = this;\n    var data = response.data;\n    var groupBy = data.responseHeader.params['group.field'];\n    var seriesList = [];\n    var series = {};\n    _(data.grouped[groupBy].groups).forEach(function (item) {\n      var target = item.groupValue || 'N/A';\n      var datapoints = [];\n      for (var i = 0; i < item.doclist.docs.length; i++) {\n        for (var property in item.doclist.docs[i]) {\n          if (item.doclist.docs[i].hasOwnProperty(property) && property != self.time) {\n            var t = moment.utc(item.doclist.docs[i][self.time]).unix() * 1000;\n            datapoints.push([item.doclist.docs[i][property], t]);\n          }\n        }\n      }\n      seriesList.push({\n        target: target,\n        datapoints: datapoints\n      });\n    });\n    return {\n      data: seriesList\n    };\n  }\n\n  convertResponse(response) {\n\n    var self = this;\n\n    var data = response.data;\n\n    if (!data) {\n      return [];\n    }\n\n    if (data.response) {\n      return this.convertResponseUngrouped(response);\n    }\n\n    if (data.grouped) {\n      return this.convertResponseGrouped(response);\n    }\n\n    return [];\n  }\n\n  annotationQuery(options) {\n    const annotation = options.annotation;\n    const baseQuery = this.templateSrv.replace(annotation.query, {}, \"glob\") || \"*:*\";\n    const timeField = annotation.timeField || \"timestamp_dt\";\n    const collection = annotation.collection || \"annotations\";\n    const tagsField = annotation.tagsField || \"tags\";\n    const titleField = annotation.titleField || \"desc\";\n    const textField = annotation.textField || null;\n    const start = options.range.from.toISOString();\n    const end = options.range.to.toISOString();\n    const query = {\n      q: `${baseQuery} AND ${timeField}:[${start} TO ${end}]`,\n      limit: 10\n    };\n\n    var url = this.url + '/solr/' + annotation.collection + '/select?wt=json&defType=edismax';\n\n    var requestOptions;\n\n    requestOptions = {\n      method: 'GET',\n      url: url,\n      params: query\n    };\n\n    return this.doRequest(requestOptions).then((result) => {\n      return _.map(result.data.response.docs, (doc) => {\n        return {\n          annotation: annotation,\n          time: moment(doc[timeField]).valueOf(),\n          title: doc[titleField],\n          tags: doc[tagsField],\n          text: doc[textField]\n        };\n      });\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n    if (this.basicAuth) {\n      options.withCredentials = true;\n      options.headers = {\n        \"Authorization\": this.basicAuth\n      };\n    }\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n}"]}